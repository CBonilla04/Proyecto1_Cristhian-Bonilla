// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto1_CristhianBonilla.Utils;

#nullable disable

namespace Proyecto1_CristhianBonilla.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240720044836_AddIdentityToFlights")]
    partial class AddIdentityToFlights
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.FlightPassengers", b =>
                {
                    b.Property<int>("IdFliPas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFliPas"));

                    b.Property<int>("IdPasTyp")
                        .HasColumnType("int");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("IdFliPas");

                    b.HasIndex("IdPasTyp");

                    b.HasIndex("IdReservation");

                    b.ToTable("FlightPassengers");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.FlightScales", b =>
                {
                    b.Property<int>("IdFliSca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFliSca"));

                    b.Property<int>("IdFlight")
                        .HasColumnType("int");

                    b.Property<int>("IdScale")
                        .HasColumnType("int");

                    b.HasKey("IdFliSca");

                    b.HasIndex("IdFlight");

                    b.HasIndex("IdScale");

                    b.ToTable("FlightScales");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Flights", b =>
                {
                    b.Property<int>("IdFlight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ArriveDate")
                        .HasColumnType("Smalldatetime");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("Smalldatetime");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdFlight");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.PassengerType", b =>
                {
                    b.Property<int>("IdPasTyp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPasTyp"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPasTyp");

                    b.ToTable("PassengerType");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Reservations", b =>
                {
                    b.Property<int>("IdReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservation"));

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("Smalldatetime");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdReservation");

                    b.HasIndex("IdUser");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Scales", b =>
                {
                    b.Property<int>("IdScale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdScale"));

                    b.Property<DateTime>("ArriveDate")
                        .HasColumnType("Smalldatetime");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("Smalldatetime");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdScale");

                    b.ToTable("Scales");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Users", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Preferences")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("SecondSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.FlightPassengers", b =>
                {
                    b.HasOne("Proyecto1_CristhianBonilla.Models.PassengerType", "PassengerType")
                        .WithMany("FlightPassengers")
                        .HasForeignKey("IdPasTyp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto1_CristhianBonilla.Models.Reservations", "Reservations")
                        .WithMany("FlightPassengers")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PassengerType");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.FlightScales", b =>
                {
                    b.HasOne("Proyecto1_CristhianBonilla.Models.Flights", "Flights")
                        .WithMany("FlightScales")
                        .HasForeignKey("IdFlight")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto1_CristhianBonilla.Models.Scales", "Scales")
                        .WithMany("FlightScales")
                        .HasForeignKey("IdScale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flights");

                    b.Navigation("Scales");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Flights", b =>
                {
                    b.HasOne("Proyecto1_CristhianBonilla.Models.Reservations", "Reservations")
                        .WithMany("Flights")
                        .HasForeignKey("IdFlight")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Reservations", b =>
                {
                    b.HasOne("Proyecto1_CristhianBonilla.Models.Users", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Flights", b =>
                {
                    b.Navigation("FlightScales");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.PassengerType", b =>
                {
                    b.Navigation("FlightPassengers");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Reservations", b =>
                {
                    b.Navigation("FlightPassengers");

                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Scales", b =>
                {
                    b.Navigation("FlightScales");
                });

            modelBuilder.Entity("Proyecto1_CristhianBonilla.Models.Users", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
